{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "7139569",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/68.0.3440.106 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.13.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2398,
                    "netTime": 371,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859441360,
                    "endTime": 1533859441714,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859441718,
                    "endTime": 1533859441725,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859441972,
                    "endTime": 1533859442001,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 124,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859442004,
                    "endTime": 1533859442281,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859442287,
                    "endTime": 1533859442304,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859442305,
                    "endTime": 1533859442543,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859442543,
                    "endTime": 1533859442657,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859442663,
                    "endTime": 1533859442671,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "AssertionError: expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49356:69)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1533859442671,
                    "endTime": 1533859442822,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "AssertionError: expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49365:69)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1533859442824,
                    "endTime": 1533859443046,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49379:84)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859443047,
                    "endTime": 1533859443200,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49391:84)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859443201,
                    "endTime": 1533859443310,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49403:84)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859443312,
                    "endTime": 1533859443331,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 150,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49415:84)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859443332,
                    "endTime": 1533859443490,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49427:84)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859443535,
                    "endTime": 1533859443546,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "37823443",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 5412,
                    "netTime": 1074,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 60,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859455492,
                    "endTime": 1533859455644,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 43,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859455840,
                    "endTime": 1533859456117,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 43,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859456137,
                    "endTime": 1533859456198,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 158,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859456293,
                    "endTime": 1533859456953,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859458037,
                    "endTime": 1533859458071,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859458074,
                    "endTime": 1533859458104,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859458107,
                    "endTime": 1533859458147,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1533859458631,
                    "endTime": 1533859458658,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 97,
                    "log": [
                        "expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49356:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1533859458660,
                    "endTime": 1533859458807,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 103,
                    "log": [
                        "expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49365:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1533859459208,
                    "endTime": 1533859459384,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 224,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49379:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859459690,
                    "endTime": 1533859459940,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 26,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49391:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859460104,
                    "endTime": 1533859460136,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 251,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49403:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859460152,
                    "endTime": 1533859460425,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49415:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859460518,
                    "endTime": 1533859460543,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 49,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:41795:13",
                        "assertEql@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:42905:5",
                        "methodWrapper@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:40925:18",
                        "@base/tests.webpack.js?5d85f4b6be8752e67254fa1afa0ac666af7e140d:49427:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1533859460624,
                    "endTime": 1533859460751,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.8"
    }
}